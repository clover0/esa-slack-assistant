name: Release Docker image asset

on:
  push:
    branches: ["main"]

permissions: {}

concurrency:
  group: release-docker-asset-${{ github.ref || github.event.inputs.tag }}
  cancel-in-progress: false

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      pull-requests: write
    outputs:
      tag: ${{ steps.tagpr.outputs.tag }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: app-token
        with:
          app-id: ${{ vars.TOKEN_GEN_APP_ID }}
          private-key: ${{ secrets.TOKEN_GEN_PRIVATE_KEY }}

      - name: Create PR for release or create tag
        uses: Songmu/tagpr@7191605433b03e11b313dbbc0efb80185170de4b # v1.9.0
        id: tagpr
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

  release:
    name: Release
    needs: [prepare]
    permissions:
      contents: write
      id-token: write
      packages: write
      attestations: write
    if: needs.prepare.outputs.tag != ''
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          provenance: true
          sbom: true
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/esa-slack-assistant:${{ needs.prepare.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
